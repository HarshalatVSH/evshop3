/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/constants.js":
/*!**************************!*\
  !*** ./src/constants.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnalyticEvent": () => (/* binding */ AnalyticEvent),
/* harmony export */   "CdnUrlBase": () => (/* binding */ CdnUrlBase),
/* harmony export */   "CtaType": () => (/* binding */ CtaType),
/* harmony export */   "InlineVariant": () => (/* binding */ InlineVariant),
/* harmony export */   "MessageType": () => (/* binding */ MessageType),
/* harmony export */   "NotificationType": () => (/* binding */ NotificationType),
/* harmony export */   "PopupMode": () => (/* binding */ PopupMode),
/* harmony export */   "UrlBase": () => (/* binding */ UrlBase),
/* harmony export */   "UtmPlacement": () => (/* binding */ UtmPlacement)
/* harmony export */ });
const UrlBase = 'https://www.expertvoice.com';
const CdnUrlBase = 'https://cdn.expertvoice.com';
const AnalyticEvent = {
  CLOSE: 'EXTENSION_CLOSE',
  CTA_CLICK: 'EXTENSION_CTA_CLICK',
  INLINE_CTA_CLICK: 'EXTENSION_INLINE_CTA_CLICK',
  INLINE_ERROR: 'EXTENSION_INLINE_ERROR',
  INSTALL: 'EXTENSION_INSTALLED',
  LOGIN: 'EXTENSION_LOGIN',
  LOGIN_ERROR: 'EXTENSION_LOGIN_ERROR',
  OPEN: 'EXTENSION_OPEN',
  REPORT: 'EXTENSION_REPORT',
  SEARCH: 'EXTENSION_SEARCH',
  SIGN_UP: 'EXTENSION_SIGNUP'
};
const CtaType = {
  BRAND: 'BRAND',
  BRAND_PLP: 'BRAND_PLP',
  EV_BRANDS: 'EV_BRANDS',
  EV_HOME: 'EV_HOME',
  LOGIN: 'LOGIN',
  PDP: 'PDP',
  PDP_REVIEW_PROMPT: 'PDP_REVIEW_PROMPT',
  PDP_REVIEWS: 'PDP_REVIEWS'
};
const InlineVariant = {
  DISCOUNT_GENERIC: 'discount-generic',
  DISCOUNT_PERCENT: 'discount-percent',
  DISCOUNT_PRICE: 'discount-price',
  LOGGED_OUT: 'logged-out',
  NO_SAVINGS: 'no-savings',
  OOS: 'oos'
};
const MessageType = {
  AC: 'ac',
  // Publishes an analytic event
  CONTEXT: 'context',
  // Initiates a context load with parsed page data
  DATA: 'data',
  // Updates page components' context and user data
  LOGIN: 'login:submit',
  // Submits the Login form
  LOGIN_SHOW: 'login:show',
  // Opens popup with login form
  LOGIN_START: 'login:start',
  // Requests to open popup and login form
  LOGOUT: 'logout',
  // Initiates a logout
  OPEN: 'open',
  // Opens the popup in the overlay
  SYNC: 'sync',
  // Sync's the state in the content script with the user
  RESET: 'reset' // Initiates a context load from page components
};

const NotificationType = {
  ACTIVE: 'active',
  PASSIVE: 'passive'
};
const PopupMode = {
  LOGIN: 'login',
  REPORT: 'report'
};
const UtmPlacement = {
  INLINE_PRODUCT: 'inline_product',
  INLINE_REVIEWS: 'inline_reviews',
  POPUP_BRAND: 'popup_brand',
  POPUP_LEARN: 'popup_learn_more',
  POPUP_MY_BRANDS: 'popup_my_brands',
  POPUP_PRODUCT: 'popup_product',
  POPUP_REVIEWS: 'popup_reviews'
};

/***/ }),

/***/ "./src/helper.js":
/*!***********************!*\
  !*** ./src/helper.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AUTH_COOKIE": () => (/* binding */ AUTH_COOKIE),
/* harmony export */   "AUTH_DOMAIN": () => (/* binding */ AUTH_DOMAIN),
/* harmony export */   "formatInteger": () => (/* binding */ formatInteger),
/* harmony export */   "formatPrice": () => (/* binding */ formatPrice),
/* harmony export */   "formatProductName": () => (/* binding */ formatProductName),
/* harmony export */   "getAuthCookie": () => (/* binding */ getAuthCookie),
/* harmony export */   "getBrandUrls": () => (/* binding */ getBrandUrls),
/* harmony export */   "getCacheable": () => (/* binding */ getCacheable),
/* harmony export */   "getEVBrandsUrl": () => (/* binding */ getEVBrandsUrl),
/* harmony export */   "getEVHomeUrl": () => (/* binding */ getEVHomeUrl),
/* harmony export */   "getFromCache": () => (/* binding */ getFromCache),
/* harmony export */   "getInlineVariant": () => (/* binding */ getInlineVariant),
/* harmony export */   "getNotificationType": () => (/* binding */ getNotificationType),
/* harmony export */   "getPrice": () => (/* binding */ getPrice),
/* harmony export */   "getProductUrls": () => (/* binding */ getProductUrls),
/* harmony export */   "getRoundedStar": () => (/* binding */ getRoundedStar),
/* harmony export */   "isAuthCookie": () => (/* binding */ isAuthCookie),
/* harmony export */   "isAuthenticated": () => (/* binding */ isAuthenticated),
/* harmony export */   "isComparablePrice": () => (/* binding */ isComparablePrice),
/* harmony export */   "removeFromCache": () => (/* binding */ removeFromCache),
/* harmony export */   "sendAC": () => (/* binding */ sendAC),
/* harmony export */   "toAbsoluteUrl": () => (/* binding */ toAbsoluteUrl)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./src/constants.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }


// ----------------------------------
// Analytics Helpers
// ----------------------------------
const sendAC = (action, data = {}) => chrome.runtime.sendMessage({
  action,
  data: _objectSpread(_objectSpread({}, data), {}, {
    url: document.location.href
  }),
  type: _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.AC
});

// ----------------------------------
// Auth Helpers
// ----------------------------------
const AUTH_COOKIE = '__at'; // also __at2 with auth2 & gateway2
const AUTH_DOMAIN = 'https://www.expertvoice.com';
const isAuthCookie = c => AUTH_DOMAIN.includes(c?.domain) && c?.name?.startsWith(AUTH_COOKIE);
const getAuthCookie = async () => {
  const cookies = await chrome.cookies.getAll({
    url: AUTH_DOMAIN
  });
  return cookies.find(c => isAuthCookie(c));
};
const isAuthenticated = async () => {
  const c = await getAuthCookie();
  return !!c;
};

// ----------------------------------
// Cache Helpers
// ----------------------------------
const getFromCache = async (key, {
  ttl
} = {}) => {
  const entries = await chrome.storage.local.get([key]);
  const entry = entries?.[key];
  return entry?.created && entry?.value && (!ttl || entry.created + ttl > Date.now()) ? entry.value : null;
};
const getCacheable = async (key, supplier, {
  reset = false,
  ttl
} = {}) => {
  // Try to pull from storage
  const cached = await getFromCache(key, {
    ttl
  });
  if (cached) {
    if (reset) {
      // Remove the previously cached item
      chrome.storage.local.remove(key);
    } else {
      return cached;
    }
  }
  const loaded = await supplier();
  if (loaded) {
    // Cache the new item
    chrome.storage.local.set({
      [key]: {
        created: Date.now(),
        value: loaded
      }
    });
    return loaded;
  }
  return null;
};
const removeFromCache = async (...keys) => chrome.storage.local.remove(keys);

// ----------------------------------
// Product Price Helpers
// ----------------------------------
const getPrice = data => {
  let p = data?.bestPrice || data?.price;
  if (typeof p === 'string') {
    p = parseFloat(p);
  }
  return p >= 0 ? p : null; // verify if price is valid
};

const isComparablePrice = (product, page) => {
  const pEV = product?.accessConfirmed ? getPrice(product) : null;
  const pPage = getPrice(page);
  if (pEV === null || pPage === null) {
    return null;
  }
  return pEV <= pPage;
};
const formatPrice = product => {
  const price = getPrice(product);
  if (price === null) {
    return null;
  }
  const currency = product.currencyCode && product.currencyCode !== 'N/A' ? product.currencyCode : 'USD';
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency
  }).format(price);
};

// ----------------------------------
// Review Summary Helpers
// ----------------------------------
const getRoundedStar = reviewStars => reviewStars ? (Math.round(reviewStars * 10) / 10).toFixed(1) : null;
const formatInteger = n => {
  if (typeof n !== 'number') {
    return null;
  }
  return new Intl.NumberFormat('en-US', {
    maximumFractionDigits: 0
  }).format(n);
};

// ----------------------------------
// Product Name Helpers
// ----------------------------------
const decodeHTML = string => {
  const div = document.createElement('div');
  div.innerHTML = string;
  return div.textContent;
};
const formatHtml = (input = '') => {
  let output = input;
  if (input.includes('&reg')) {
    output = output.replace(/&reg/gi, '&#174');
  }
  if (input.includes('&copy')) {
    output = output.replace(/&copy/gi, '&#169');
  }
  if (input.includes('&trade')) {
    output = output.replace(/&trade/gi, '&#8482');
  }
  return output;
};
const formatProductName = value => decodeHTML(formatHtml(value).replace(/&#(\d+);/g, (m, n) => String.fromCharCode(n)));

// ----------------------------------
// Context Helpers
// ----------------------------------
const getNotificationType = ({
  brand,
  page,
  product
}, user) => {
  if (brand?.active) {
    if (!user) {
      return _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.ACTIVE;
    }
    if (brand.rewarded) {
      if (product) {
        if (!product.inStock && product.accessConfirmed) {
          return _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.PASSIVE;
        }
        const evIsCheaper = isComparablePrice(product, page);
        if (evIsCheaper === null) {
          return _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.ACTIVE;
        }
        return evIsCheaper ? _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.ACTIVE : _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.PASSIVE;
      }
      return _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.ACTIVE;
    }
    return brand.targeted ? _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.PASSIVE : null;
  }
  return null;
};
const getInlineVariant = ({
  brand,
  page,
  product
}, user) => {
  if (!user) {
    return _constants__WEBPACK_IMPORTED_MODULE_1__.InlineVariant.LOGGED_OUT;
  }
  const evIsCheaper = isComparablePrice(product, page);
  if (evIsCheaper === false) {
    return _constants__WEBPACK_IMPORTED_MODULE_1__.InlineVariant.NO_SAVINGS;
  }
  if (!product?.inStock && product?.accessConfirmed) {
    return _constants__WEBPACK_IMPORTED_MODULE_1__.InlineVariant.OOS;
  }
  if (evIsCheaper) {
    return _constants__WEBPACK_IMPORTED_MODULE_1__.InlineVariant.DISCOUNT_PRICE;
  }
  if (brand?.discount > 0) {
    return _constants__WEBPACK_IMPORTED_MODULE_1__.InlineVariant.DISCOUNT_PERCENT;
  }
  return _constants__WEBPACK_IMPORTED_MODULE_1__.InlineVariant.DISCOUNT_GENERIC;
};

// ----------------------------------
// Url Helpers
// ----------------------------------
const toAbsoluteUrl = (src, base = _constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase) => {
  if (!src) {
    return null;
  }
  return new URL(src, base).href;
};
const addQueryParams = (url, newParams = []) => {
  const newUrl = new URL(url);
  const params = newUrl.searchParams;
  newParams.forEach(([key, value]) => {
    params.append(key, value);
  });
  return newUrl.href;
};
const addUTMParams = (url, placement) => addQueryParams(url, [['ac_tracking', 'extension'], ['utm_source', 'amazon'], ['utm_medium', 'chrome'], ['utm_placement', placement]]);
const getEVHomeUrl = (placement = _constants__WEBPACK_IMPORTED_MODULE_1__.UtmPlacement.POPUP_LEARN) => addUTMParams(_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase, placement);
const getEVBrandsUrl = (placement = _constants__WEBPACK_IMPORTED_MODULE_1__.UtmPlacement.POPUP_MY_BRANDS) => addUTMParams(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/home/brands`, placement);
const getBrandUrls = (brand, placement = _constants__WEBPACK_IMPORTED_MODULE_1__.UtmPlacement.POPUP_BRAND) => {
  if (!brand) return {};
  return {
    brand: addUTMParams(brand.url, placement),
    plp: addUTMParams(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/shop/brand/${brand.orgId}/${brand.orgKey}`, placement)
  };
};
const getProductUrls = (product, placementPrefix = 'POPUP') => {
  if (!product) return {};
  return {
    pdp: addUTMParams(product.pdpUrl, _constants__WEBPACK_IMPORTED_MODULE_1__.UtmPlacement[`${placementPrefix}_PRODUCT`]),
    reviewPrompt: addUTMParams(addQueryParams(product.pdpUrl, [['launch', 'true']]), _constants__WEBPACK_IMPORTED_MODULE_1__.UtmPlacement[`${placementPrefix}_REVIEWS`]),
    reviews: addUTMParams(addQueryParams(product.pdpUrl, [['section', 'recommendations']]), _constants__WEBPACK_IMPORTED_MODULE_1__.UtmPlacement[`${placementPrefix}_REVIEWS`])
  };
};

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _defineProperty)
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!***********************!*\
  !*** ./src/worker.js ***!
  \***********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./src/constants.js");
/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper */ "./src/helper.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/* eslint-disable no-case-declarations,no-param-reassign */



const ACTIVE_ICONS = {
  16: 'assets/images/icon16.png',
  48: 'assets/images/icon48.png',
  128: 'assets/images/icon128.png'
};
const INACTIVE_ICONS = {
  16: 'assets/images/icon16_gray.png',
  48: 'assets/images/icon48_gray.png',
  128: 'assets/images/icon128_gray.png'
};
const loadUser = () => (0,_helper__WEBPACK_IMPORTED_MODULE_2__.getCacheable)('user', async () => {
  // Quick check of the auth cookie to see if the user is even logged in
  const authed = await (0,_helper__WEBPACK_IMPORTED_MODULE_2__.isAuthenticated)();
  if (authed) {
    // Load the user's details
    const res = await fetch(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/xapi/user/ext/1.0/users/me`);
    if (res.ok) {
      const data = await res.json();
      return {
        avatar: data.avatar,
        firstName: data.firstName,
        lastName: data.lastName,
        userId: data.userId,
        uuid: data.uuid
      };
    }
    return null;
  }
  return null;
}, {
  ttl: 86400000
}); // 1 day

const loadContext = async (params = {}) => {
  try {
    const res = await fetch(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/xapi/browser-support/pub/1.0/search`, {
      method: 'POST',
      body: JSON.stringify(_objectSpread(_objectSpread({}, params), {}, {
        maxResults: 1
      })),
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    const data = await res.json();
    let [brand] = data.brands || [];
    let [product] = data.products || [];
    if (brand) {
      brand = {
        accessType: brand.accessType,
        active: brand.active,
        avatar: (0,_helper__WEBPACK_IMPORTED_MODULE_2__.toAbsoluteUrl)(brand.avatarUrl, _constants__WEBPACK_IMPORTED_MODULE_1__.CdnUrlBase),
        discount: brand.discount,
        exactMatch: brand.exactMatch,
        name: brand.text,
        orgId: brand.orgId,
        orgKey: brand.orgKey,
        rewarded: brand.accessType === 'REWARDED',
        score: brand.score,
        targeted: brand.accessType !== 'UNKNOWN',
        url: (0,_helper__WEBPACK_IMPORTED_MODULE_2__.toAbsoluteUrl)(brand.url)
      };
    }
    if (product && brand?.orgId === product.orgId) {
      product = {
        accessConfirmed: product.accessConfirmed,
        bestPrice: product.bestPrice,
        currencyCode: product.currencyCode,
        discountPct: product.discountPct,
        exactMatch: product.exactMatch,
        imageUrl: product.imageUrl,
        inStock: product.inStock,
        msrp: product.msrp,
        name: product.text,
        orgId: product.orgId,
        pdpUrl: (0,_helper__WEBPACK_IMPORTED_MODULE_2__.toAbsoluteUrl)(product.pdpUrl),
        price: product.price,
        productCode: product.productCode,
        reviewCount: product.reviewCount,
        reviewRating: product.reviewRating,
        reviewStars: product.reviewStars,
        score: product.score
      };
    } else {
      product = undefined;
    }
    return {
      brand,
      page: params,
      product
    };
  } catch (ex) {
    // ignore
  }
  return null;
};
const sendEvent = (action, data = {}) => {
  fetch(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/xapi/ac/pub/1.0/event`, {
    method: 'POST',
    body: JSON.stringify({
      action,
      appName: 'ev-shop-plugin',
      data: _objectSpread({
        version: chrome.runtime.getManifest().version
      }, data),
      mfgId: data?.mfgId || data?.orgId || undefined,
      url: data?.url || undefined,
      version: 1
    }),
    credentials: 'include',
    headers: {
      'Content-Type': 'application/json'
    }
  });
};
const syncBadge = (tabId, context, user) => {
  const notif = (0,_helper__WEBPACK_IMPORTED_MODULE_2__.getNotificationType)(context, user);
  if (context?.brand?.active && notif) {
    // We got a high-confidence match, update the icon to be 'active'.
    chrome.action.setIcon({
      tabId,
      path: ACTIVE_ICONS
    });
    chrome.action.setBadgeText({
      tabId,
      text: '1'
    });
    chrome.action.setBadgeBackgroundColor({
      tabId,
      color: notif === _constants__WEBPACK_IMPORTED_MODULE_1__.NotificationType.ACTIVE ? '#52B382' : '#E3E3E3'
    });
  } else {
    // Keep the extension icon in the 'inactive' state.
    chrome.action.setIcon({
      tabId,
      path: INACTIVE_ICONS
    });
    chrome.action.setBadgeText({
      tabId,
      text: ''
    });
  }
};
const syncContext = (tabId, context, user) => {
  chrome.tabs.sendMessage(tabId, {
    type: _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.DATA,
    context,
    user
  });
};
const triggerSync = async (tabId, user, sendResponse) => {
  const context = await chrome.tabs.sendMessage(tabId, {
    type: _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.SYNC,
    user
  });
  if (context.brand) {
    syncBadge(tabId, context, user);
    syncContext(tabId, context, user);
  }
  if (sendResponse) {
    sendResponse(_objectSpread(_objectSpread({}, context), {}, {
      user
    }));
  }
};
chrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {
  switch (msg.type || '') {
    case _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.AC:
      sendEvent(msg.action, msg.data);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.CONTEXT:
      // Search for the brand & load the user
      Promise.all([loadContext(msg.data), loadUser()]).then(([context, user]) => {
        // Sync the badge with the brand results
        syncBadge(sender.tab.id, context, user);
        syncContext(sender.tab.id, context, user);
        sendResponse(_objectSpread(_objectSpread({}, context), {}, {
          user
        }));
      });
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.LOGIN:
      fetch(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/sign-on/service/sign-in`, {
        method: 'POST',
        body: `identifier=${encodeURIComponent(msg.identifier)}&password=${encodeURIComponent(msg.password)}`,
        credentials: 'include',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }).then(res => res.json()).then(data => {
        sendResponse(data);
      });
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.LOGOUT:
      // Fire the sign-out request so on-platform things happen.
      fetch(`${_constants__WEBPACK_IMPORTED_MODULE_1__.UrlBase}/sign-out`, {
        credentials: 'include',
        redirect: 'follow'
      }).then(async res => {
        if (res.ok) {
          // Clear the cached results
          await (0,_helper__WEBPACK_IMPORTED_MODULE_2__.removeFromCache)('user');
        }
        return sendResponse(res.ok);
      });
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.RESET:
      triggerSync(sender.tab.id, msg.user, sendResponse);
      break;
    case _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.LOGIN_START:
      chrome.tabs.sendMessage(sender.tab.id, {
        type: _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.LOGIN_SHOW
      });
      break;
    default:
      return false;
  }
  return true; // Tell chrome it's asynchronous
});

// Send an AC event when the user first installs
chrome.runtime.onInstalled.addListener(details => {
  if (details.reason === chrome.runtime.OnInstalledReason.INSTALL) {
    sendEvent(_constants__WEBPACK_IMPORTED_MODULE_1__.AnalyticEvent.INSTALL);
  }
});

// Trigger the content popup on the tab where the action (extension icon) was clicked
chrome.action.onClicked.addListener(tab => {
  chrome.tabs.sendMessage(tab.id, {
    type: _constants__WEBPACK_IMPORTED_MODULE_1__.MessageType.OPEN
  });
});

// Watch for changes to the auth cookie to maintain the auth state
chrome.cookies.onChanged.addListener(async e => {
  // Check if this is our auth cookie
  if ((0,_helper__WEBPACK_IMPORTED_MODULE_2__.isAuthCookie)(e.cookie)) {
    const c = await (0,_helper__WEBPACK_IMPORTED_MODULE_2__.getAuthCookie)();
    if (!c) {
      // The user signed out. Clear the user state.
      (0,_helper__WEBPACK_IMPORTED_MODULE_2__.removeFromCache)('user');
    }
  }
});

// Trigger a sync event whenever a tab is reactivated
chrome.tabs.onActivated.addListener(async () => {
  try {
    const user = await loadUser();
    const [tab] = await chrome.tabs.query({
      active: true,
      currentWindow: true
    });
    triggerSync(tab.id, user);
  } catch (ex) {
    // ignore
  }
});
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,